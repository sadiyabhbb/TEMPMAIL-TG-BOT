import os
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = os.getenv("BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    res = requests.get("https://www.1secmail.com/api/v1/?action=genRandomMailbox&count=1")
    email = res.json()[0]
    context.user_data['email'] = email
    await update.message.reply_text(f"‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤: {email}\n\nüëâ ‡¶è‡¶ñ‡¶® /check ‡¶¶‡¶ø‡ßü‡ßá ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§")

async def check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if 'email' not in context.user_data:
        await update.message.reply_text("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá /start ‡¶¶‡¶ø‡¶® ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡ßá‡¶§‡ßá‡•§")
        return

    email = context.user_data['email']
    login, domain = email.split('@')
    url = f"https://www.1secmail.com/api/v1/?action=getMessages&login={login}&domain={domain}"
    mails = requests.get(url).json()

    if not mails:
        await update.message.reply_text("üì≠ ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶Ü‡¶∏‡ßá‡¶®‡¶ø‡•§")
        return

    msg = ""
    for mail in mails:
        msg += f"üì© From: {mail['from']}\nSubject: {mail['subject']}\n\n"

    await update.message.reply_text(msg)

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("check", check))
    app.run_polling()

if __name__ == "__main__":
    main()
