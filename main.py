import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Bot Token ‡¶è‡¶ñ‡¶æ‡¶®‡ßá
BOT_TOKEN = "8035083791:AAF9m2iDWqhqi4UGoHn5EP1_z3znpRSdsa4"

# ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶ø‡¶ï‡¶∂‡¶®‡¶æ‡¶∞‡¶ø
user_data = {}

# /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°: ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        res = requests.get("https://www.1secmail.com/api/v1/?action=genRandomMailbox&count=1")
        if res.status_code != 200:
            await update.message.reply_text("‚ö†Ô∏è ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá, ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
            return

        data = res.json()
        if not data:
            await update.message.reply_text("‚ö†Ô∏è ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
            return

        email = data[0]
        user_data[update.effective_chat.id] = email
        await update.message.reply_text(f"‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤:\n`{email}`", parse_mode="MarkdownV2")
    except Exception as e:
        await update.message.reply_text("‚ùå ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§")
        print("START ERROR:", e)

# /check ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°: ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
async def check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_chat.id
        email = user_data.get(user_id)
        if not email:
            await update.message.reply_text("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá /start ‡¶¶‡¶ø‡¶® ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡ßá‡¶§‡ßá‡•§")
            return

        login, domain = email.split('@')
        url = f"https://www.1secmail.com/api/v1/?action=getMessages&login={login}&domain={domain}"
        res = requests.get(url)
        if res.status_code != 200:
            await update.message.reply_text("‚ö†Ô∏è ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§")
            return

        messages = res.json()
        if not messages:
            await update.message.reply_text("üì≠ ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶Ü‡¶∏‡ßá‡¶®‡¶ø‡•§")
        else:
            text = "\n\n".join(
                [f"üìß From: {msg['from']}\nüìù Subject: {msg['subject']}" for msg in messages]
            )
            await update.message.reply_text(f"üì• ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏:\n\n{text}")
    except Exception as e:
        await update.message.reply_text("‚ùå ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
        print("CHECK ERROR:", e)

# Bot run ‡¶ï‡¶∞‡¶æ
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("check", check))
    app.run_polling()
